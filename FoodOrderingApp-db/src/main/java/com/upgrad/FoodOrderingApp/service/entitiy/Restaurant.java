package com.upgrad.FoodOrderingApp.service.entitiy;

// Generated 15 Jun, 2019 9:01:22 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Restaurant generated by hbm2java
 */
@Entity
@Table(name = "restaurant", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "uuid"))
public class Restaurant implements java.io.Serializable {

	private int id;
	private AddressEntity addressEntity;
	private String uuid;
	private String restaurantName;
	private String photoUrl;
	private BigDecimal customerRating;
	private int averagePriceForTwo;
	private int numberOfCustomersRated;
	private Set<RestaurantCategory> restaurantCategories = new HashSet<RestaurantCategory>(
			0);
	private Set<RestaurantItem> restaurantItems = new HashSet<RestaurantItem>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);

	public Restaurant() {
	}

	public Restaurant(int id, AddressEntity addressEntity, String uuid,
			String restaurantName, BigDecimal customerRating,
			int averagePriceForTwo, int numberOfCustomersRated) {
		this.id = id;
		this.addressEntity = addressEntity;
		this.uuid = uuid;
		this.restaurantName = restaurantName;
		this.customerRating = customerRating;
		this.averagePriceForTwo = averagePriceForTwo;
		this.numberOfCustomersRated = numberOfCustomersRated;
	}

	public Restaurant(int id, AddressEntity addressEntity, String uuid,
			String restaurantName, String photoUrl, BigDecimal customerRating,
			int averagePriceForTwo, int numberOfCustomersRated,
			Set<RestaurantCategory> restaurantCategories,
			Set<RestaurantItem> restaurantItems, Set<Orders> orderses) {
		this.id = id;
		this.addressEntity = addressEntity;
		this.uuid = uuid;
		this.restaurantName = restaurantName;
		this.photoUrl = photoUrl;
		this.customerRating = customerRating;
		this.averagePriceForTwo = averagePriceForTwo;
		this.numberOfCustomersRated = numberOfCustomersRated;
		this.restaurantCategories = restaurantCategories;
		this.restaurantItems = restaurantItems;
		this.orderses = orderses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id", nullable = false)
	public AddressEntity getAddress() {
		return this.addressEntity;
	}

	public void setAddress(AddressEntity addressEntity) {
		this.addressEntity = addressEntity;
	}

	@Column(name = "uuid", unique = true, nullable = false, length = 200)
	public String getUuid() {
		return this.uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	@Column(name = "restaurant_name", nullable = false, length = 50)
	public String getRestaurantName() {
		return this.restaurantName;
	}

	public void setRestaurantName(String restaurantName) {
		this.restaurantName = restaurantName;
	}

	@Column(name = "photo_url")
	public String getPhotoUrl() {
		return this.photoUrl;
	}

	public void setPhotoUrl(String photoUrl) {
		this.photoUrl = photoUrl;
	}

	@Column(name = "customer_rating", nullable = false, precision = 131089, scale = 0)
	public BigDecimal getCustomerRating() {
		return this.customerRating;
	}

	public void setCustomerRating(BigDecimal customerRating) {
		this.customerRating = customerRating;
	}

	@Column(name = "average_price_for_two", nullable = false)
	public int getAveragePriceForTwo() {
		return this.averagePriceForTwo;
	}

	public void setAveragePriceForTwo(int averagePriceForTwo) {
		this.averagePriceForTwo = averagePriceForTwo;
	}

	@Column(name = "number_of_customers_rated", nullable = false)
	public int getNumberOfCustomersRated() {
		return this.numberOfCustomersRated;
	}

	public void setNumberOfCustomersRated(int numberOfCustomersRated) {
		this.numberOfCustomersRated = numberOfCustomersRated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "restaurant")
	public Set<RestaurantCategory> getRestaurantCategories() {
		return this.restaurantCategories;
	}

	public void setRestaurantCategories(
			Set<RestaurantCategory> restaurantCategories) {
		this.restaurantCategories = restaurantCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "restaurant")
	public Set<RestaurantItem> getRestaurantItems() {
		return this.restaurantItems;
	}

	public void setRestaurantItems(Set<RestaurantItem> restaurantItems) {
		this.restaurantItems = restaurantItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "restaurant")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

}
